@inherits LayoutComponentBase
@implements IDisposable
@inject HotKeys HotKeys
@inject NavigationManager NavigationManager

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <div class="main">
        <div class="top-row px-4">
            <a href="http://blazor.net" target="_blank" class="ml-md-auto">About</a>
        </div>

        <div class="content px-4">
            <div>
                @Body
            </div>

            <div class="hot-keys-cheat-sheet alert alert-secondary mt-4">
                <div><strong>Hot keys cheat sheet</strong></div>
                <ul>
                    @foreach (var key in this.HotKeysContext.Keys)
                    {
                        <li>
                            <span class="key">@key.ToString("{0}")</span> ... <span class="description">@key.ToString("{1}")</span>
                        </li>
                    }
                </ul>
                <p>The hot key <span class="key">H</span> will work even if input element has focus.</p>
                <p>
                    * Input element for the hot key <span class="key">H</span>: <input type="text" value="" class="form-control-sm" />
                </p>
                <p>The hot key <span class="key">C</span> will work when a non-text input element, like a checkbox or radio, has focus.</p>
                <p>
                    * Input element for the hot key <span class="key">C</span>: <input type="checkbox" value="" class="form-control-sm" />
                </p>
            </div>
        </div>
    </div>
</div>

@code
{
    private HotKeysContext HotKeysContext;

    private DateTime LastCtrlKeyPressed = DateTime.MinValue;

    protected override void OnInitialized()
    {
        HotKeysContext = HotKeys.CreateContext()
        .Add(ModKeys.None, Keys.H, _ => GoTo("/"), "Go to Home page.", AllowIn.Input)
        .Add(ModKeys.None, Keys.C, _ => GoTo("/counter"), "Go to Counter page.", AllowIn.NonTextInput)
        .Add(ModKeys.None, Keys.F, _ => GoTo("/fetchdata"), "Go to Fetch data page.")
        .Add(ModKeys.None, Keys.Ctrl, OnCtrlKeyDown, "Double tap to go to Home.")
        ;

        HotKeys.KeyDown += HotKeys_KeyDown;
    }

    private Task GoTo(string url)
    {
        NavigationManager.NavigateTo(url);
        return Task.CompletedTask;
    }

    private void OnCtrlKeyDown()
    {
        var lastCtrlKeyPressed = this.LastCtrlKeyPressed;
        this.LastCtrlKeyPressed = DateTime.Now;

        if ((DateTime.Now - lastCtrlKeyPressed).TotalMilliseconds <= 200)
        {
            this.GoTo("/");
        }
    }

    private void HotKeys_KeyDown(object sender, HotKeyDownEventArgs e)
    {
        if (e.Key == Keys.A)
        {
            e.PreventDefault = true;
            //GoTo("/counter");
        }
    }

    public void Dispose()
    {
        HotKeysContext?.Dispose();
    }
}
